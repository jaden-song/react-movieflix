{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","protoTypes","PropTypes","array","bool","isRequired","string","api","axios","create","baseURL","params","api_key","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","values","onChange","func","SearchContainer","event","preventDefault","searchByTerm","value","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","object","DetailContainer","pathname","location","includes","match","push","history","parseId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","render","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.89155e34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({\n    title,\n    children\n}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => \n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({text, color}) => \n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n;\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie=false}) =>\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image bgUrl={imageUrl\n          ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n          : require(\"../assets/noPosterSmall.png\")\n        } />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 15 ? `${title.substring(0, 18)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n;\n\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  year: PropTypes.string.isRequired,\n  isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\n\nconst HomePresenter = ({ \n    nowPlaying, popular, upcoming, loading, error \n}) =>\n  <>\n    <Helmet>\n      <title>Movies | Mflix</title>\n    </Helmet>\n    {\n      loading ? <Loader/> :\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && \n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => \n              <Poster \n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true} />\n            )}\n          </Section>\n        }\n        {upcoming && upcoming.length > 0 && \n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => \n              <Poster \n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true} />\n            )}\n          </Section>\n        }\n        {popular && popular.length > 0 && \n          <Section title=\"Popular Movies\">\n            {popular.map(movie => \n              <Poster \n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true} />\n            )}\n          </Section>\n        }\n        {error && <Message color=\"#e74c3c\" text={error}/>}\n      </Container>\n    }\n  </>\n;\n\nHomePresenter.protoTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcoming: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string  \n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"9f218d81ec2a0bd6fed3b23a601c84e9\",\n        // language: \"ko-KR\"\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: term => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id => api.get(`tv/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: term => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const {data:{results: nowPlaying}} = await moviesApi.nowPlaying();\n            const {data:{results: upcoming}} = await moviesApi.upcoming();\n            const {data:{results: popular}} = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n        } catch {\n            this.setState({\n                error: \"Can't find movies information.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ \n  topRated, popular, airingToday, loading, error \n}) => \n  <>\n    <Helmet><title>TV Shows | Mflix</title></Helmet>\n    {loading ? <Loader/> :\n    <Container>\n      {topRated && topRated.length > 0 && \n        <Section title=\"Top Rated Shows\">\n          {topRated.map(show => \n            <Poster \n              key={show.id}\n              id={show.id}\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              rating={show.vote_average}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              isMovie={false} />\n          )}\n        </Section>\n      }\n      {popular && popular.length > 0 && \n        <Section title=\"Popular Shows\">\n          {popular.map(show => \n            <Poster \n              key={show.id}\n              id={show.id}\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              rating={show.vote_average}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              isMovie={false} />\n          )}\n        </Section>\n      }\n      {airingToday && airingToday.length > 0 && \n        <Section title=\"Airing Today\">\n          {airingToday.map(show => \n            <Poster \n              key={show.id}\n              id={show.id}\n              title={show.original_name}\n              imageUrl={show.poster_path}\n              rating={show.vote_average}\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              isMovie={false} />  \n          )}\n        </Section>\n      }\n      {error && <Message color=\"#e74c3c\" text={error}/>}\n    </Container>}\n  </>\n;\n\nTVPresenter.protoTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string  \n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\"\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const {data:{results:topRated}} = await tvApi.topRated();\n            const {data:{results:popular}} = await tvApi.popular();\n            const {data:{results:airingToday}} = await tvApi.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            });\n        } catch {\n            this.setState({error:\"Can't find TV information.\"});\n        } finally {\n            this.setState({ loading: false});\n        }\n    }\n\n    render() {\n        const { topRated, popular, airingToday, error, loading } = this.state;\n        return (\n            <TVPresenter\n                topRated={topRated}\n                airingToday={airingToday}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({ \n  movieResults,\n  tvResults, \n  loading, \n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => \n  <Container>\n    <Helmet><title>Search | Mflix</title></Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input placeholder=\"Search Movies or TV Shows...\" \n        values={searchTerm} \n        onChange={updateTerm} />\n    </Form>\n    {loading ? <Loader/> :\n      <>\n        {movieResults && movieResults.length > 0 &&\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => \n              <Poster \n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true} />  \n            )}\n          </Section>\n        }\n        {tvResults && tvResults.length > 0 &&\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => \n              <Poster \n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                isMovie={false} />\n            )}\n          </Section>\n        }\n        {error && <Message color=\"#e74c3c\" text={error}/>}\n        {tvResults && movieResults && tvResults.length ===0 && movieResults.length ===0\n          && <Message text=\"Nothing found\" color=\"#95a5a6\"/>}\n      </>\n    }\n  </Container>\n;\n\nSearchPresenter.protoTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n        this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const { target: {value} } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({loading: true});\n    try {\n      const {data:{results:movieResults}} = await moviesApi.search(searchTerm);\n      const {data:{results: tvResults}} = await tvApi.search(searchTerm);\n      this.setState({\n          movieResults,\n          tvResults\n      });\n        \n    } catch {\n      this.setState({error: \"Can't find results.\"});\n    } finally {\n      this.setState({loading: false});\n    }\n  };\n\n  render() {\n    const {movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n          movieResults={movieResults}\n          tvResults={tvResults}\n          loading={loading}\n          error={error}\n          searchTerm={searchTerm}\n          handleSubmit={this.handleSubmit}\n          updateTerm={this.updateTerm}\n      />\n    );\n  }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\n\nconst DetailPresenter = ({ result, loading, error }) => \n  loading \n    ? (\n      <>\n        <Helmet><title>Loading | MFlix</title></Helmet>\n        <Loader />\n      </>\n    ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name} | MFlix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover \n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n          <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container> \n  );\n\nDetailPresenter.protoTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string  \n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {location: {pathname}} = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n    async componentDidMount() {\n        const {\n            match: {params: { id }},\n            history: { push }\n        } = this.props;\n        const { isMovie } = this.state;\n        const parseId = parseInt(id);\n        if (isNaN(parseId)) {\n            return push(\"/\");\n        }\n\n        let result = null;\n        try {\n            if (isMovie) {\n                ({data:result} = await moviesApi.movieDetail(parseId));\n            } else {\n                ({data:result} = await tvApi.showDetail(parseId));\n            }\n        } catch {\n            this.setState({ error: \"Can't find anything.\" });\n        } finally {\n            this.setState({ loading: false, result });\n        }\n        \n    }\n\n    render() {\n        const { result, error, loading } = this.state;\n        return (\n            <DetailPresenter\n                result={result}\n                error={error}\n                loading={loading}\n            />\n        );\n\n    }\n}","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    background-color: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid\n        ${props => (props.current ? \"#3498db\" : \"transparent\")};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\n\nexport default withRouter(({location: { pathname }}) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));\n","import React from \"react\"\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\"\nimport Home from \"Routes/Home\"\nimport TV from \"Routes/TV\"\nimport Search from \"Routes/Search\"\nimport Detail from \"Routes/Detail\"\nimport Header from \"Components/Header\"\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" exact component={TV} />\n                <Route path=\"/tv/popular\" render={()=> <h1>Popular</h1>} />\n                <Route path=\"/search\" component={Search} />\n                <Route path=\"/movie/:id\" component={Detail} />\n                <Route path=\"/show/:id\" component={Detail} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n)","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\"\nimport GlobalStyles from \"Components/GlobalStyles\"\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}